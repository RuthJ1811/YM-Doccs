{"expireTime":9007200825438407000,"key":"gatsby-mdx-fix-entire-payload-b0284800c4e5009476a476c526b6f2ae-","val":{"mdast":{"type":"root","children":[{"type":"heading","depth":1,"children":[{"type":"text","value":"Send Text Message","position":{"start":{"line":1,"column":3,"offset":2},"end":{"line":1,"column":20,"offset":19},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":1,"column":20,"offset":19},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Send a simple text response to the user","position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":40,"offset":62},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":23},"end":{"line":3,"column":40,"offset":62},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Add the message you want to display within the ","position":{"start":{"line":5,"column":1,"offset":66},"end":{"line":5,"column":48,"offset":113},"indent":[]}},{"type":"inlineCode","value":"'message'","position":{"start":{"line":5,"column":48,"offset":113},"end":{"line":5,"column":59,"offset":124},"indent":[]}},{"type":"text","value":" section.","position":{"start":{"line":5,"column":59,"offset":124},"end":{"line":5,"column":68,"offset":133},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":66},"end":{"line":5,"column":68,"offset":133},"indent":[]}},{"type":"paragraph","children":[{"type":"strong","children":[{"type":"inlineCode","value":"app.sendTextMessage()","position":{"start":{"line":7,"column":3,"offset":139},"end":{"line":7,"column":26,"offset":162},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":137},"end":{"line":7,"column":28,"offset":164},"indent":[]}},{"type":"text","value":" is a promisified function so if you want to avoid any async behaviour please consider using ","position":{"start":{"line":7,"column":28,"offset":164},"end":{"line":7,"column":121,"offset":257},"indent":[]}},{"type":"strong","children":[{"type":"inlineCode","value":".then()","position":{"start":{"line":7,"column":123,"offset":259},"end":{"line":7,"column":132,"offset":268},"indent":[]}}],"position":{"start":{"line":7,"column":121,"offset":257},"end":{"line":7,"column":134,"offset":270},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":137},"end":{"line":7,"column":134,"offset":270},"indent":[]}},{"type":"heading","depth":2,"children":[{"type":"text","value":"Code Snippet","position":{"start":{"line":9,"column":4,"offset":277},"end":{"line":9,"column":16,"offset":289},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":274},"end":{"line":9,"column":16,"offset":289},"indent":[]}},{"type":"code","lang":"js","meta":null,"value":"app.sendTextMessage('message');","position":{"start":{"line":11,"column":1,"offset":293},"end":{"line":13,"column":4,"offset":336},"indent":[1,1]}},{"type":"export","value":"export const _frontmatter = {}","position":{"start":{"line":16,"column":1,"offset":340},"end":{"line":16,"column":31,"offset":370},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":16,"column":31,"offset":370}}},"scopeImports":["import React from 'react'"],"scopeIdentifiers":["React"],"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"send-text-message\",\n    \"className\": \"__internal\"\n  }, \"Send Text Message\", mdx(\"a\", _extends({\n    parentName: \"h1\"\n  }, {\n    \"href\": \"#send-text-message\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"p\", null, \"Send a simple text response to the user\"), mdx(\"p\", null, \"Add the message you want to display within the \", mdx(\"code\", _extends({\n    parentName: \"p\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"'message'\"), \" section.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \"app.sendTextMessage()\")), \" is a promisified function so if you want to avoid any async behaviour please consider using \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, mdx(\"code\", _extends({\n    parentName: \"strong\"\n  }, {\n    \"className\": \"language-text\"\n  }), \".then()\"))), mdx(\"h2\", {\n    \"id\": \"code-snippet\",\n    \"className\": \"__internal\"\n  }, \"Code Snippet\", mdx(\"a\", _extends({\n    parentName: \"h2\"\n  }, {\n    \"href\": \"#code-snippet\",\n    \"aria-hidden\": true,\n    \"className\": \"anchor\"\n  }), \"#\")), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"js\"\n  }, mdx(\"pre\", _extends({\n    parentName: \"div\"\n  }, {\n    \"className\": \"language-js\"\n  }), mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"app\", mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \".\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token function\"\n  }), \"sendTextMessage\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \"(\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token string\"\n  }), \"'message'\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \")\"), mdx(\"span\", _extends({\n    parentName: \"code\"\n  }, {\n    \"className\": \"token punctuation\"\n  }), \";\")))));\n}\n;\nMDXContent.isMDXComponent = true;","rawMDXOutput":"/* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"send-text-message\",\n      \"className\": \"__internal\"\n    }}>{`Send Text Message`}<a parentName=\"h1\" {...{\n        \"href\": \"#send-text-message\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h1>\n    <p>{`Send a simple text response to the user`}</p>\n    <p>{`Add the message you want to display within the `}<code parentName=\"p\" {...{\n        \"className\": \"language-text\"\n      }}>{`'message'`}</code>{` section.`}</p>\n    <p><strong parentName=\"p\"><code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`app.sendTextMessage()`}</code></strong>{` is a promisified function so if you want to avoid any async behaviour please consider using `}<strong parentName=\"p\"><code parentName=\"strong\" {...{\n          \"className\": \"language-text\"\n        }}>{`.then()`}</code></strong></p>\n    <h2 {...{\n      \"id\": \"code-snippet\",\n      \"className\": \"__internal\"\n    }}>{`Code Snippet`}<a parentName=\"h2\" {...{\n        \"href\": \"#code-snippet\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}>{`#`}</a></h2>\n    <div {...{\n      \"className\": \"gatsby-highlight\",\n      \"data-language\": \"js\"\n    }}><pre parentName=\"div\" {...{\n        \"className\": \"language-js\"\n      }}><code parentName=\"pre\" {...{\n          \"className\": \"language-js\"\n        }}>{`app`}<span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`.`}</span><span parentName=\"code\" {...{\n            \"className\": \"token function\"\n          }}>{`sendTextMessage`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`(`}</span><span parentName=\"code\" {...{\n            \"className\": \"token string\"\n          }}>{`'message'`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`)`}</span><span parentName=\"code\" {...{\n            \"className\": \"token punctuation\"\n          }}>{`;`}</span></code></pre></div>\n\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"}}